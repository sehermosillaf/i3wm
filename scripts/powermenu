
#!/usr/bin/env bash

# Simple Power Menu using rofi or zenity
# Author: Adapted and improved version by ChatGPT based on Benjamin Chrétien's original work

#######################################################################
#                            CONFIGURACIÓN                            #
#######################################################################

FG_COLOR="#bbbbbb"
BG_COLOR="#111111"
HLFG_COLOR="#111111"
HLBG_COLOR="#bbbbbb"
BORDER_COLOR="#222222"

ROFI_THEME=~/.config/rofi/powermenu.rasi
ZENITY_TITLE="Power Menu"
ZENITY_TEXT="Choose an action:"
ROFI_PROMPT="Power:"

menu_confirm_actions="Shutdown Reboot Hibernate Suspend Logout"

declare -A menu_actions=(
  [" Shutdown"]="systemctl poweroff"
  [" Reboot"]="systemctl reboot"
  [" Suspend"]="systemctl suspend"
  [" Hibernate"]="systemctl hibernate"
  [" Lock"]="$HOME/.config/i3/scripts/blur-lock"
  [" Logout"]="i3-msg exit"
  [" Cancel"]=""
)

enable_confirmation=false
preferred_launcher="rofi"
launcher_list=(rofi zenity)

#######################################################################
#                           FUNCIONES ÚTILES                          #
#######################################################################

print_help() {
  echo "Uso: $(basename "$0") [-h] [-c] [-p <rofi|zenity>]"
  echo ""
  echo "Opciones:"
  echo "  -h           Mostrar esta ayuda"
  echo "  -c           Requiere confirmación del usuario"
  echo "  -p <nombre>  Lanzador preferido (rofi o zenity)"
  echo ""
  echo "Dependencias: systemd, i3, y rofi o zenity"
}

command_exists() {
  command -v "$1" &> /dev/null
}

check_launcher() {
  for l in "${launcher_list[@]}"; do
    [[ "$1" == "$l" ]] && return 0
  done
  echo "Error: lanzador no válido. Opciones disponibles: ${launcher_list[*]}"
  exit 1
}

prepare_launcher() {
  case "$1" in
    rofi)
      launcher_exe="rofi"
      launcher_options=(-dmenu -i -lines ${#menu_actions[@]} -p "$ROFI_PROMPT"
        -bc "$BORDER_COLOR" -bg "$BG_COLOR" -fg "$FG_COLOR"
        -hlfg "$HLFG_COLOR" -hlbg "$HLBG_COLOR" -theme "$ROFI_THEME")
      ;;
    zenity)
      launcher_exe="zenity"
      launcher_options=(--list --title "$ZENITY_TITLE" --text "$ZENITY_TEXT"
        --column= --hide-header)
      ;;
  esac
}

ask_confirmation() {
  case "$launcher_exe" in
    rofi)
      confirm=$(echo -e "Yes\nNo" | rofi -dmenu -i -lines 2 -p "Confirm ${selection}?" -theme "$ROFI_THEME")
      [[ "$confirm" == "Yes" ]]
      ;;
    zenity)
      zenity --question --text "Are you sure you want to ${selection,,}?"
      [[ $? -eq 0 ]]
      ;;
  esac
}

#######################################################################
#                         PARSEO DE OPCIONES                          #
#######################################################################

while getopts ":hcp:" opt; do
  case "${opt}" in
    h) print_help; exit 0 ;;
    c) enable_confirmation=true ;;
    p) preferred_launcher="${OPTARG}"; check_launcher "$preferred_launcher" ;;
    *) print_help; exit 1 ;;
  esac
done

#######################################################################
#                         EJECUCIÓN PRINCIPAL                         #
#######################################################################

command_exists systemctl || exit 1

# Escoge lanzador disponible
for l in "$preferred_launcher" "${launcher_list[@]}"; do
  if command_exists "$l"; then
    prepare_launcher "$l"
    break
  fi
done

[[ -z "$launcher_exe" ]] && { echo "Error: No hay lanzador disponible."; exit 1; }

# Mostrar menú y capturar selección
selection=$(printf '%s\n' "${!menu_actions[@]}" | sort | "${launcher_exe}" "${launcher_options[@]}")

[[ -z "$selection" || "$selection" == " Cancel" ]] && exit 0

# Confirmación si es necesario
if $enable_confirmation && [[ "$menu_confirm_actions" =~ $selection ]]; then
  ask_confirmation || exit 0
fi

# Ejecutar acción
[[ -n "${menu_actions[$selection]}" ]] && i3-msg -q "exec --no-startup-id ${menu_actions[$selection]}"
